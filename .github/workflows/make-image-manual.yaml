name: Build go-server images (manual)
on:
  release:
    types: [ created, edited ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'tag'
        required: true
        type: string
jobs:
  var:
    name: Set variables
    runs-on: ubuntu-latest
    outputs:
      platform: "linux"
      nginx: 1.23.2
      image: "ghcr.io/${{ github.repository }}"
      tag: ${{ steps.var.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set variables
        id: var
        run: |
          if [ "${{ github.event_name }}" != "release" ] && [ "${{ inputs.tag }}" != "latest" ]; then
            TAG="${{ inputs.tag }}" && echo "tag=${TAG#v}" >> $GITHUB_OUTPUT
          else
            TAG="$(git describe --tags)" && echo "tag=${TAG#v}" >> $GITHUB_OUTPUT
          fi
  build:
    name: Build
    needs: var
    strategy:
      matrix:
        arch: [arm, arm64, amd64]
    runs-on: ${{ matrix.arch == 'amd64' && 'ubuntu-latest' || matrix.arch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        run: |
          git checkout ${{ needs.var.outputs.tag }}
          docker build \
            --tag ${{ needs.var.outputs.image }}-${{ matrix.arch }}:${{ needs.var.outputs.tag }} \
            --build-arg VERSION=${{ needs.var.outputs.nginx }} \
            --build-arg ARCH=${{ matrix.arch }} \
            --build-arg PLATFORM=${{ needs.var.outputs.platform }} \
            -f etc/docker/Dockerfile .
      - name: Push
        run: |
          docker push ${{ needs.var.outputs.image }}-${{ matrix.arch }}:${{ needs.var.outputs.tag }}
  manifest:
    name: Manifest
    needs:
      - var 
      - build
    strategy:
      matrix:
        include:
          - tag: ${{ needs.var.outputs.tag }}
          - tag: latest
    runs-on: ubuntu-latest
    steps:
      - name: Login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Manifest
        run: |
          docker manifest create ${{ needs.var.outputs.image }}:${{ matrix.tag }} \
            --amend ${{ needs.var.outputs.image }}-amd64:${{ needs.var.outputs.tag }} \
            --amend ${{ needs.var.outputs.image }}-arm64:${{ needs.var.outputs.tag }} \
            --amend ${{ needs.var.outputs.image }}-arm:${{ needs.var.outputs.tag }}
          docker manifest annotate --arch arm64 \
            ${{ needs.var.outputs.image }}:${{ matrix.tag  }} \
            ${{ needs.var.outputs.image }}-arm64:${{ needs.var.outputs.tag }}
          docker manifest annotate --arch amd64 \
            ${{ needs.var.outputs.image }}:${{ matrix.tag  }} \
            ${{ needs.var.outputs.image }}-amd64:${{ needs.var.outputs.tag }}
          docker manifest annotate --arch arm \
            ${{ needs.var.outputs.image }}:${{ matrix.tag  }} \
            ${{ needs.var.outputs.image }}-arm:${{ needs.var.outputs.tag }}
          docker manifest push ${{ needs.var.outputs.image }}:${{ matrix.tag  }}
